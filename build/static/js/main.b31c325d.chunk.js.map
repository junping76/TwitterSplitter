{"version":3,"sources":["index.js"],"names":["Index","props","_this","Object","c_NodeJS_tweeter_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","c_NodeJS_tweeter_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","c_NodeJS_tweeter_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","message","tweet","name","error","handleSubmit","bind","c_NodeJS_tweeter_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","handleChange","_this2","axios","get","then","response","setState","data","catch","event","Tweet","target","Name","msgForm","document","forms","method","url","value","config","headers","Content-Type","console","log","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","_material_ui_core_GridList__WEBPACK_IMPORTED_MODULE_8___default","cols","_material_ui_core_GridListTile__WEBPACK_IMPORTED_MODULE_9___default","rows","style","backgroundColor","textAlign","face","size","color","onSubmit","type","onChange","map","d","idx","key","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b31c325d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport axios from 'axios';\n\nclass Index extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: [],\n      tweet: null,\n      name: null,\n      error: null\n    }\n\n    // Handle submit and value change\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n    \n  componentDidMount() {\n    // Get all message from database\n    axios.get(\"/api/v1/getall\")\n      .then((response) => {\n      this.setState({\n        message: response.data\n      });\n    })\n    // Catch any errors\n    .catch(error => this.setState({ error }));\n  }\n\n  handleChange(event) {\n    this.setState({\n        Tweet: event.target.tweet,\n        Name: event.target.name\n    });\n  }\n\n  handleSubmit(event) {\n\n    let msgForm = document.forms[0];\n    \n    // Post new message\n    axios({\n        method: 'post',\n        url: '/api/v1/post',\n        data: {Tweet: msgForm.tweet.value, Name: msgForm.name.value},\n        config: { headers: {'Content-Type': 'application/json' }}\n        })      \n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  \n  render() {\n    return (\n    \n      <React.Fragment>            \n        <GridList cols={20}>\n          <GridListTile  rows={2} cols={1}>\n          </GridListTile>\n          <GridListTile rows={2} cols={9} style={{ backgroundColor: 'blue'}}>\n            <div style={{textAlign: 'center'}}>\n            <br/>\n            <br/>\n            <font face=\"Arial\" size=\"6\" color=\"white\">\n              <b>Twitter Splitter</b>\n            </font>\n            <br/>\n            <br/>\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Name:&nbsp;\n                <input type=\"text\" name=\"name\" size=\"30\" value={this.state.name} onChange={this.handleChange} /> \n              </label>\n              <br/>\n              <br/>\n              <label>\n                <textarea name=\"tweet\" rows=\"10\" cols=\"70\" value={this.state.tweet} onChange={this.handleChange} />\n              </label>\n              <br/>\n              <br/>\n              \n              <input type=\"submit\" value=\"Send Message\" />\n            </form>            \n            </div>\n          </GridListTile>\n          <GridListTile  rows={'auto'} cols={10}>\n            <div style={{textAlign: 'center'}}>\n            <font face=\"Calibri\" size=\"3\" color=\"black\">\n            <br/>\n            {this.state.message.map(function(d, idx){\n              return (<li key={idx}>{d.Tweet}<br/><br/></li>)\n            })}            \n            <br/>\n            <br/>\n            <br/>\n            </font>\n            </div>\n          </GridListTile>\n        </GridList>\n\n      </React.Fragment>    \n    );\n  }\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n"],"sourceRoot":""}